class(arbol)
library(ape)
library(phyclust)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names=1))
map <- read.table(file = '~/Downloads/test.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["names"]])
rownames(m) <- labels
colnames(m) <- labels
arbol <- nj(as.dist(m))
png('rplot.png', width = 32400, height = 3400)
plot(arbol, main = "Neighbor Joining")
dev.off()
class(arbol)
library(ape)
library(phyclust)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Downloads/test.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["names"]])
rownames(m) <- labels
colnames(m) <- labels
arbol <- nj(as.dist(m))
png('rplot.png', width = 32400, height = 3400)
plot(arbol, main = "Neighbor Joining")
dev.off()
class(arbol)
library(phyclust, quiet = TRUE)
# arbol <- nj(as.dist(m))
arbol <- nj(as.dist(lower.tri(m)))
png('rplot.png', width = 32400, height = 3400)
plot(arbol, main = "Neighbor Joining")
dev.off()
write.phylip(m, 'phylip', classid = NULL, seqname = NULL,
width.seqname = 10, width.line = 60, lower.case = FALSE,
code.type = .code.type[1], sep = "")
library(phyclust, quiet = TRUE)
write.phylip(m, 'phylip', classid = NULL, seqname = NULL,
width.seqname = 10, width.line = 60, lower.case = FALSE,
code.type = .code.type[1], sep = "")
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Downloads/test.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["names"]])
rownames(m) <- labels
colnames(m) <- labels
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Desktop/repos/bifido/ani/mapping.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["names"]])
rownames(m) <- labels
colnames(m) <- labels
m
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Desktop/repos/bifido/ani/mapping.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["names"]])
labels
map
labels <- as.vector(map[["X0"]])
rownames(m) <- labels
colnames(m) <- labels
m
write.phylip(m, 'phylip', classid = NULL, seqname = NULL,
width.seqname = 10, width.line = 60, lower.case = FALSE,
code.type = .code.type[1], sep = "")
library(ape)
library(phyclust, quiet = TRUE)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Desktop/repos/bifido/ani/mapping.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["X0"]])
rownames(m) <- labels
colnames(m) <- labels
write.phylip(m, 'phylip', classid = NULL, seqname = NULL,
width.seqname = 10, width.line = 60, lower.case = FALSE,
code.type = .code.type[1], sep = "")
lower.tri(m, diag=FALSE)
phylip <- lower.tri(m, diag = FALSE)
phylip
View(phylip)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Desktop/repos/bifido/ani/mapping.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["X0"]])
rownames(m) <- labels
colnames(m) <- labels
arbol <- nj(as.dist(m))
png('rplot.png', width = 32400, height = 3400)
plot(arbol, main = "Neighbor Joining")
dev.off()
library(ape)
library(phyclust, quiet = TRUE)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tsv", head=T, row.names=1))
map <- read.table(file = '~/Desktop/repos/bifido/ani/mapping.tsv', sep = '\t', header = TRUE)
labels <- as.vector(map[["X0"]])
rownames(m) <- labels
colnames(m) <- labels
arbol <- nj(as.dist(m))
png('rplot.png', width = 32400, height = 3400)
plot(arbol, main = "Neighbor Joining")
dev.off()
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ani_ada/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names = 1))
n
nrow(n)
ncol(n)
ones <- ones(252)
ones <- matrix(1, 252, 252)
ones
dm <- ones - n
dm
tree <- nj(as.dist(m))
tree <- nj(as.dist(dm))
plot(tree, main="Neighbor Joining")
plot(tree, main="Neighbor Joining")
tree <- nj(as.dist(dm))
png('rplot.png', width = 32400, height = 3400)
plot(tree, main="Neighbor Joining")
dev.off()
dm <- ones - n
tree <- nj(as.dist(dm))
png('rplot.png', width = 4400, height = 3400)
plot(tree, main="Neighbor Joining")
dev.off()
dm <- ones - n
tree <- nj(as.dist(dm))
png('rplot.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
root
png('rootplot.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
library(ape)
library(phyclust, quiet = TRUE)
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ani_ada/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names = 1))
ones <- matrix(1, 252, 252)
dm <- ones - n
tree <- nj(as.dist(dm))
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
library(ape)
library(phyclust, quiet = TRUE)
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names = 1))
ones <- matrix(1, 252, 252)
dm <- ones - n
tree <- nj(as.dist(dm))
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
root
View(root)
View(root)
write.tree(root)
write.tree(root, file="tree.tre")
colors <- rainbow(Nedge(tree))
colors <- rainbow(Nedge(tree))
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", edge.color=colors)
dev.off()
install.packages('dendextend')
library(dendextend)
labels(root)
class(root)
root$tip.label
grep("blongum", root$tip.label)
grep("breve", root$tip.label)
grep("suis", root$tip.label)
length(grep("suis"), root$tip.label)
length(grep("suis", root$tip.label))
tipcol <- rep('black', length(root$tip.label))
categs <- c("blongum", "longum", "infantis", "suis", "breve")
colors <- c("blue", "green", "red", "purple", "pink")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("blongum", "longum", "infantis", "suis", "breve")
colors <- c("blue", "darkolivegreen3", "red", "purple", "pink")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("forestgreen", "blue", "red", "purple", "pink")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("darkgreen", "dodgerblue2", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("darkgreen", "dodgerblue4", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("darkgreen", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("dodgerblue4", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("dodgerblue2", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol) #, edge.color=colors)
dev.off()
?svg
svg('root.svg', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
capabilities()["cairo"]
svg('root.svg', width = 4000, height = 4400)
library(svglite)
library(ggplot2)
install.packages("svglite")
library(svglite)
install.packages("gdtools")
install.packages("svglite")
ggsave(filename='root.svg')
install.packages("gdtools")
install.packages("cairo")
install.packages("Cairo")
install.packages("gdtools")
library(Cairo)
install.packages("svglite")

library(nycflights13)
library(tidyverse)
library(nycflights13)
library(tidyverse)
source("http://bioconductor.org/biocLite.R")
biocLite()
?iris
ii <- data.frame(iris)
ii
ii <- data.frame(iris)
ii
library(haven)
write.csv(ii, file = "testDF.csv")
?GlobalPatterns
data(GlobalPatterns)
data(esophagus)
data(enterotype)
data(soilrep)
library("phyloseq"); packageVersion("phyloseq")
?GlobalPatterns
GlobaPatterns
GlobalPatterns
?count
?length
length(c(1,2,3))
g1 <- c(5, 2, 1.5, 5, 3.5, 3, 4)
g2 <- c(0.5, 0.2, 0.5, 0.1, 0.1)
?ttest
?t.test
t.test(g1, g2)
testlist <- c(14,21)
test <-data.frame("studyID" = c(1,2,3), "Age" = c(14,21,15))
for (i in testlist)
print(test$Age[test$studyID==i])
test
for (i in testlist) { print(test$Age[test$studyID==i])}
for (i in testlist) { print(test$Age[test$studyID==i])}
testlist
class(test$Age)
library(ape)
m <- as.matrix(read.table("~/Downloads/ANIm_percentage_identity.tab", head=T, row.names=1))
m
arbol <- nj(as.dist(m), "rooted") > plot(arbol)
arbol <- nj(as.dist(m), "unrooted") > plot(arbol)
arbol <- nj(as.dist(m)) > plot(arbol)
arbol <- nj(as.dist(m))
plot(arbol)
arbol <- nj(as.dist(m), "unrooted")
plot(arbol)
?nj()
plot(arbol)
library(ape)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names=1))
arbol <- nj(as.dist(m))
plot(arbol)
install.packages(c("ape", "ggplot2", "svglite"))
library(ape)
library(ggplot2)
library(svglite)
svg('root.svg', width=4000, height=4400)
capabilities()
svg('root.svg', width=4000, height=4400)
png('root.png', width = 4000, height = 4400)
svg('root.svg', width=4000, height=4400)
install.packages(c("ape", "ggplot2", "svglite"))
install.packages(c("ape", "ggplot2", "svglite"))
install.packages("Cairo")
install.packages("dvglite")
install.packages("svglite")
install.packages("gdtools")
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
library(gplots)
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
setwd("~/Desktop/repos/bifido/ani")
# create heatmap
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
library(ape)
library(ggplot2)
library(Cairo)
library(RColorBrewer)
library(gplots)
library(phytools)
# read in identity matrix from pyani
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab",
head=T, row.names = 1))
ones <- matrix(1, 252, 252) # matrix as ones for element subtraction
dm <- ones - n # subtract to create distance matrix
n
dim(n)
ones <- matrix(1, 274, 274) # matrix as ones for element subtraction
dm <- ones - n # subtract to create distance matrix
tree <- nj(as.dist(dm)) # create a tree from the distance matrix
# plot tree
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
# set breve genomes as the root
breve <- read.csv('~/Desktop/repos/bifido/scripts/blast/output/breve.csv')
breve
breve['Unnamed..0']
breves <- as.vector(breve['Unnamed..0'])
breves
root <- root(tree, breves)
breves <- breve[['Unnamed..0']]
breves
root <- root(tree, breves)
breve
breve['Unnamed..0']
root <- root(tree, breves)
library(ape)
library(ggplot2)
library(Cairo)
library(RColorBrewer)
library(gplots)
library(phytools)
# read in identity matrix from pyani
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab",
head=T, row.names = 1))
ones <- matrix(1, 274, 274) # matrix as ones for element subtraction
dm <- ones - n # subtract to create distance matrix
tree <- nj(as.dist(dm)) # create a tree from the distance matrix
# plot tree
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
# set breve genomes as the root
breve <- read.csv('~/Desktop/repos/bifido/scripts/blast/output/breve.csv')
breves <- breve[['Unnamed..0']]
root <- root(tree, breves)
root <- drop.tip(tree, breves)
breves
class(breves)
breves <- as.character(breve[['Unnamed..0']])
breves
class(breves)
root <- drop.tip(tree, breves)
png('test.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
tree$tip.label
png('test.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
breves <- setdiff(breves, keep)
keep <- c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1")
breves <- setdiff(breves, keep)
breves
tree_red <- drop.tip(tree, breves)
png('tree_red.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
png('tree_red.png', width = 4000, height = 4400)
plot(tree_red, main="Neighbor Joining")
dev.off()
# set three breve genomes as root
root <- root(tree_red, keep)
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining")
dev.off()
# color branch labels by species/subspecies
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("dodgerblue2", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
svg('root.svg', width=44, height=54)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
# write rooted tree to a tree file
write.tree(root, file="tree.tre")
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
# create heatmap
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
# pair phylogenetic tree with heatmap
phylo.heatmap(tree, df)
# pair phylogenetic tree with heatmap
phylo.heatmap(tree, df)
# pair phylogenetic tree with heatmap
phylo.heatmap(tree, df)
# pair phylogenetic tree with heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df)
dev.off()
phylo.heatmap
?phylo.heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("lightblue", "blue"))(200)[200:1])
dev.off()
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("blue", "lightblue"))(200)[200:1])
dev.off()
# pair phylogenetic tree with heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("dodgerblue2", "white"))(200)[200:1])
dev.off()
# pair phylogenetic tree with heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("dodgerblue4", "white"))(200)[200:1])
dev.off()
# pair phylogenetic tree with heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
df
colnames(df)
rownames(df)
# drop all but three of the breve genomes in df
root_df <- df[!rownames(df) %in% breves,]
root_df
nrow(root_df)
nrow(df)
length(tree.tip)
tree$tip.label
root$tip.label
# drop all but three of the breve genomes in df
root_df <- df[!rownames(df) %in% breves,]
png('root_heatmap.png', width=4000, height=4400)
phylo.heatmap(root, root_df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
# create heatmap
png('root_heatmap.png', width=800)
heatmap.2(root_df)
dev.off()
# pair phylogenetic tree with heatmap
png('tree_heatmap.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
# pair phylogenetic tree with heatmap
png('root_heatmap.png', width=4000, height=4400)
phylo.heatmap(root, root_df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
png('tree_heatmap.png', width=800)
heatmap.2(df)
dev.off()
# drop all but three of the breve genomes in df
root_df <- df[!rownames(df) %in% breves,]
# create heatmap
png('root_heatmap.png', width=800)
heatmap.2(root_df)
dev.off()
# pair phylogenetic tree with heatmap
png('tree_combo.png', width=4000, height=4400)
phylo.heatmap(tree, df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
# pair phylogenetic tree with heatmap
png('combo_root.png', width=4000, height=4400)
phylo.heatmap(root, root_df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()
dev.off()
# pair phylogenetic tree with heatmap
png('root_combo.png', width=4000, height=4400)
phylo.heatmap(root, root_df, colors=colorRampPalette(c("dodgerblue3", "white"))(200)[200:1])
dev.off()

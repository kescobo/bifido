library(nycflights13)
library(tidyverse)
library(nycflights13)
library(tidyverse)
source("http://bioconductor.org/biocLite.R")
biocLite()
?iris
ii <- data.frame(iris)
ii
ii <- data.frame(iris)
ii
library(haven)
write.csv(ii, file = "testDF.csv")
?GlobalPatterns
data(GlobalPatterns)
data(esophagus)
data(enterotype)
data(soilrep)
library("phyloseq"); packageVersion("phyloseq")
?GlobalPatterns
GlobaPatterns
GlobalPatterns
?count
?length
length(c(1,2,3))
g1 <- c(5, 2, 1.5, 5, 3.5, 3, 4)
g2 <- c(0.5, 0.2, 0.5, 0.1, 0.1)
?ttest
?t.test
t.test(g1, g2)
testlist <- c(14,21)
test <-data.frame("studyID" = c(1,2,3), "Age" = c(14,21,15))
for (i in testlist)
print(test$Age[test$studyID==i])
test
for (i in testlist) { print(test$Age[test$studyID==i])}
for (i in testlist) { print(test$Age[test$studyID==i])}
testlist
class(test$Age)
library(ape)
m <- as.matrix(read.table("~/Downloads/ANIm_percentage_identity.tab", head=T, row.names=1))
m
arbol <- nj(as.dist(m), "rooted") > plot(arbol)
arbol <- nj(as.dist(m), "unrooted") > plot(arbol)
arbol <- nj(as.dist(m)) > plot(arbol)
arbol <- nj(as.dist(m))
plot(arbol)
arbol <- nj(as.dist(m), "unrooted")
plot(arbol)
?nj()
plot(arbol)
library(ape)
m <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab", head=T, row.names=1))
arbol <- nj(as.dist(m))
plot(arbol)
install.packages(c("ape", "ggplot2", "svglite"))
library(ape)
library(ggplot2)
library(svglite)
svg('root.svg', width=4000, height=4400)
capabilities()
svg('root.svg', width=4000, height=4400)
png('root.png', width = 4000, height = 4400)
svg('root.svg', width=4000, height=4400)
install.packages(c("ape", "ggplot2", "svglite"))
install.packages(c("ape", "ggplot2", "svglite"))
install.packages("Cairo")
install.packages("dvglite")
install.packages("svglite")
install.packages("gdtools")
library(ape)
library(ggplot2)
library(svglite)
install.packages("gdtools")
install.packages("gdtools")
library(svglite)
library(ape)
library(ggplot2)
library(svglite)
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab",
head=T, row.names = 1))
ones <- matrix(1, 252, 252)
dm <- ones - n
tree <- nj(as.dist(dm))
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("dodgerblue2", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol)
ggsave(filename='root.svg', plot=image, width=4000, height=4400)
ggsave(filename='root.svg', plot=image, width=4000, height=4400, limitsize=FALSE)
dev.off()
write.tree(root, file="tree.tre")
image=plot(root, main="Neighbor Joining", tip.color=tipcol)
ggsave(filename='root.svg', plot=image, width=4000, height=4400, limitsize=FALSE)
ggsave('root.svg', image, device='svg', width=4000, height=4400, limitsize=FALSE)
ggsave('root.svg', print(image), device='svg', width=4000, height=4400, limitsize=FALSE)
library(cairo)
install.packages('cairo')
install.packages('Cairo')
library(cairo)
library(Cairo)
svg('root.svg', width=4000, height=4400)
setwd("~/Desktop/repos/bifido/ani")
svg('root.svg', width=4000, height=4400)
svg('root.svg', width=4000, height=4400m family='mono')
svg('root.svg', width=4000, height=4400, family='mono')
svg('root.svg', width=14, height=14)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
svg('root.svg', width=24, height=24)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
dev.off()
svg('root.svg', width=24, height=24)
dev.off()
dev.off()
dev.off()
dev.off()
svg('root.svg', width=24, height=24)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
dev.off(dev.list()["RStudioGD"])
graphics.off()
dev.off()
svg('root.svg', width=24, height=24)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
svg('root.svg', width=24, height=44)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
svg('root.svg', width=44, height=54)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
library(Cairo)
library(RColorBrewer)
library(colorRamps)
color <- colorRampPalette(c(‘white’,’blue’,’red’))(100)
color <- colorRampPalette(c(‘white’,’blue’,’red’))(100)
color <- colorRampPalette(c(‘white’,’blue’,’red’))(100)
?colorRampPalette()
color <- colorRampPalette(c('white','blue','red'))(100)
color
library(gplots)
install.packages("gplots")
library(gplots)
# read in heatmap csv
df <- read.csv(file="~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv", header=TRUE, sep=",")
df
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Rowv = rep_tree_d, Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
library(gplots)
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Rowv = rep_tree_d, Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
?heatmap.2
df
head(df)
# read in heatmap csv
df <- read.table(file="~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv", header=TRUE, sep=",")
df
test <- df[-1, -1]
test
test <- df[-1, ]
test
test <- unname(df[-1, ])
test
test <- (df[-1, ])
test
test <- (df[, -1])
test
test <- unname(df[, -1])
test
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
# create heatmap
heatmap.2(test, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
class(test)
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
test <- unname(df[, -1])
# create heatmap
heatmap.2(test, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
class(test)
class(df)
class( )
class(n)
# read in identity matrix from pyani
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab",
head=T, row.names = 1))
class(n)
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv", header=T))
df
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv", header=T, row.names = 1))
df
View(df)
View(df)
View(df)
df
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
class(df)
cla class(x[1,])
class(x[1,])
class(df[1,])
class(df[3,])
class(df[3,4])
attributes(df)
attributes(n)
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1))
class(df)
attributes(df)
n
df
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
df
attributes(df)
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7, RowSideColors = row_col,
density.info=c('none'), scale = 'none', na.color = 'yellow')
# create heatmap
heatmap.2(df, margins=c(7,10), sepcolor='white',
sepwidth=c(0.01,0.01), Colv = F,
dendrogram='row', colsep=seq(1,10,1), rowsep=seq(1,134,1),
key = TRUE, trace='none', col=color, lwid = c(2,5,5,10),
lhei = c(1,50), cexCol = 0.7, cexRow = 0.7,
density.info=c('none'), scale = 'none', na.color = 'yellow')
# create heatmap
heatmap.2(df)
# create heatmap
heatmap.2(df)
png('heatmap.png')
heatmap.2(df)
dev.off()
png('heatmap.png', width=40)
heatmap.2(df)
dev.off()
# create heatmap
png('heatmap.png', width=400)
heatmap.2(df)
dev.off()
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
library(devtools)
install_github("liamrevell/phytools")
install.packages('devtools')
library(devtools)
install_github("liamrevell/phytools")
library(phytools)
packageVersion("phytools")
?phylo.heatmap
# pair phylogenetic tree with heatmap
phylo.heatmap(root, df)
class(root)
# set breve genomes as the root
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
# read in identity matrix from pyani
n <- as.matrix(read.table("~/Desktop/repos/bifido/ani/ANIm_output/ANIm_percentage_identity.tab",
head=T, row.names = 1))
ones <- matrix(1, 252, 252) # matrix as ones for element subtraction
dm <- ones - n # subtract to create distance matrix
tree <- nj(as.dist(dm)) # create a tree from the distance matrix
# plot tree
png('tree.png', width = 4000, height = 4400)
plot(tree, main="Neighbor Joining")
dev.off()
# set breve genomes as the root
root <- root(tree, c("breve_GCF_000220135.1_ASM22013v1", "breve_GCF_000213865.1_ASM21386v1",
"breve_GCF_000158015.1_ASM15801v1"))
# color branch labels by species/subspecies
tipcol <- rep('black', length(root$tip.label))
categs <- c("longum", "blongum", "infantis", "suis", "breve")
colors <- c("dodgerblue2", "black", "firebrick2", "purple", "magenta")
for(i in 1:length(categs)) {
tipcol[grep(categs[i], root$tip.label)] <- colors[i]
}
# plot rooted tree
png('root.png', width = 4000, height = 4400)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
svg('root.svg', width=44, height=54)
plot(root, main="Neighbor Joining", tip.color=tipcol)
dev.off()
# write rooted tree to a tree file
write.tree(root, file="tree.tre")
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
# create heatmap
png('heatmap.png', width=800)
heatmap.2(df)
dev.off()
# pair phylogenetic tree with heatmap
phylo.heatmap(root, df)
nrow(df)
nrow(n)
summary(df)
df
rownames(df)
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
dim(df)
df[1
]
df
nrow(df
)
# read in heatmap csv
df <- as.matrix(read.table("~/Desktop/repos/bifido/scripts/blast/output/heatmap.csv",
header=T, row.names = 1, sep=','))
dim(df)
